{"ast":null,"code":"var _jsxFileName = \"/home/douglas/Projetos Trybe/Diversos/iss_location/src/components/map/Map.jsx\";\nimport React from \"react\";\nimport { Map as Maps, Marker } from \"pigeon-maps\";\nimport './Map.css';\nimport { connect } from \"react-redux\";\nimport { getPosition, currentPosition } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Map extends React.Component {\n  async componentDidMount() {\n    const {\n      lotation\n    } = this.props;\n    const data = await lotation();\n    currentPosition(data);\n  }\n\n  render() {\n    const {\n      latitude,\n      longetude\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Maps\",\n      children: /*#__PURE__*/_jsxDEV(Maps, {\n        height: 600,\n        defaultCenter: [50.879, 4.6997],\n        defaultZoom: 4,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          width: 50,\n          anchor: [latitude, longetude]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  latitude: state.issPosition.latitude,\n  longetude: state.issPosition.longitude\n});\n\nconst mapDispatchToProps = dispatch => ({\n  lotation: () => dispatch(getPosition())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","map":{"version":3,"sources":["/home/douglas/Projetos Trybe/Diversos/iss_location/src/components/map/Map.jsx"],"names":["React","Map","Maps","Marker","connect","getPosition","currentPosition","Component","componentDidMount","lotation","props","data","render","latitude","longetude","mapStateToProps","state","issPosition","longitude","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAG,IAAIC,IAAhB,EAAsBC,MAAtB,QAAoC,aAApC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;;;AAEA,MAAML,GAAN,SAAkBD,KAAK,CAACO,SAAxB,CAAkC;AACP,QAAjBC,iBAAiB,GAAG;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,EAA3B;AACAH,IAAAA,eAAe,CAACK,IAAD,CAAf;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKJ,KAArC;AACA,wBACI;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,MAAM,EAAE,GAAd;AAAmB,QAAA,aAAa,EAAE,CAAC,MAAD,EAAS,MAAT,CAAlC;AAAoD,QAAA,WAAW,EAAE,CAAjE;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,EAAf;AAAmB,UAAA,MAAM,EAAE,CAACG,QAAD,EAAWC,SAAX;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAhB6B;;AAmBlC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,QAAQ,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,QADI;AAEhCC,EAAAA,SAAS,EAAEE,KAAK,CAACC,WAAN,CAAkBC;AAFG,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCX,EAAAA,QAAQ,EAAE,MAAMW,QAAQ,CAACf,WAAW,EAAZ;AADc,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Map as Maps, Marker } from \"pigeon-maps\";\nimport './Map.css';\nimport { connect } from \"react-redux\";\nimport { getPosition, currentPosition } from \"../../store/actions\"\n\nclass Map extends React.Component {\n    async componentDidMount() {\n        const { lotation } = this.props;  \n        const data = await lotation();\n        currentPosition(data)\n    }\n\n    render() {\n        const { latitude, longetude } = this.props;\n        return (\n            <section className=\"Maps\">\n                <Maps height={600} defaultCenter={[50.879, 4.6997]} defaultZoom={4}>\n                    <Marker width={50} anchor={[latitude, longetude]} />\n                </Maps>\n            </section>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    latitude: state.issPosition.latitude,\n    longetude: state.issPosition.longitude,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    lotation: () => dispatch(getPosition())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map)"]},"metadata":{},"sourceType":"module"}